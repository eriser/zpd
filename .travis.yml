language: c
dist: trusty
sudo: required

notifications:
  email: false

git:
  submodules: true
  depth: 3


matrix:
  include:
    - os: linux
      compiler: gcc
      addons:
        apt:
          packages: ['python-pip', 'python-yaml']
      before_script:
        - pip install --user git+git://github.com/eddyxu/cpp-coveralls.git
      script:
          - mkdir build && cd build
          - cmake -DCOVERALLS=1 -DCMAKE_BUILD_TYPE=Debug ..
          - cmake --build .
          - cd ../
          - ./build/zpdtest pwd

      after_success:
        - coveralls -e build/CMakeFiles/feature_tests.cxx -e build/CMakeFiles/feature_tests.c -e build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp -e build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.c -e build/CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp -e build/CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c -e test -e pd --gcov-options '\-lp'
        - sudo apt-get install --yes doxygen graphviz
        - rm -rf doc
        - mkdir -p doc
        - git clone -b gh-pages https://github.com/pierreguillot/zpd.git --single-branch doc
        - openssl aes-256-cbc
          -K $encrypted_e84e7849f94f_key
          -iv $encrypted_e84e7849f94f_iv
          -in travisci_rsa.enc
          -out config/travisci_rsa
          -d
        - chmod 0600 config/travisci_rsa
        - cp config/travisci_rsa ~/.ssh/id_rsa
        - chmod +x ./config/publish-doxygen.sh
        - ./config/publish-doxygen.sh
      env:
        - Coveralls and Documentations

    - os: linux
      compiler: gcc
      script:
        - mkdir build && cd build
        - cmake ..
        - cmake --build .
        - cd ../
        - ./build/zpdtest pwd
      env:
        - Libs and Tests

    - os: linux
      compiler: clang
      script:
        - mkdir build && cd build
        - cmake ..
        - cmake --build .
        - cd ../
        - ./build/zpdtest pwd
      env:
        - Libs and Tests

    - os: osx
      compiler: gcc
      script:
        - mkdir build && cd build
        - cmake ..
        - cmake --build .
        - cd ../
        - ./build/zpdtest pwd
      env:
        - Libs and Tests

    - os: osx
      compiler: clang
      script:
        - mkdir build && cd build
        - cmake ..
        - cmake --build .
        - cd ../
        - ./build/zpdtest pwd
      env:
        - Libs and Tests
